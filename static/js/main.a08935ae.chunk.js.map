{"version":3,"sources":["components/Card/index.js","components/Gameboard/index.js","components/App/index.js","components/Deck/index.js","reduxReducer.js","index.js"],"names":["Card","handleClick","id","type","flipped","height","width","disabled","solved","className","style","onClick","alt","src","Gameboard","dimension","cards","map","card","key","includes","firstDeck","array","newArray","slice","i","length","randomIndex","Math","floor","random","temp","shuffle","reduce","acc","push","initializeDeck","App","useSelector","state","dispatchGameState","useDispatch","useState","setDimension","useEffect","resizeBoard","payload","resizeListener","window","addEventListener","removeEventListener","min","document","documentElement","clientWidth","clientHeight","LScards","JSON","parse","localStorage","getItem","setItem","stringify","sameCardClicked","clickedCard","find","isMatch","setTimeout","clear","initialState","store","createStore","prevState","storedCards","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a08935ae.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.css\";\n\nCard.propTypes = {\n\thandleClick: PropTypes.func.isRequired,\n\tid: PropTypes.number.isRequired,\n\ttype: PropTypes.string.isRequired,\n\tflipped: PropTypes.bool.isRequired,\n\tsolved: PropTypes.bool.isRequired,\n\theight: PropTypes.number.isRequired,\n\twidth: PropTypes.number.isRequired,\n\tdisabled: PropTypes.bool.isRequired,\n};\n\nfunction Card({\n\thandleClick,\n\tid,\n\ttype,\n\tflipped,\n\theight,\n\twidth,\n\tdisabled,\n\tsolved,\n}) {\n\treturn (\n\t\t<>\n\t\t\t<div\n\t\t\t\tclassName={`flip-container ${flipped ? \"flipped\" : \"\"}`}\n\t\t\t\tstyle={{ width, height }}\n\t\t\t\tonClick={() => (disabled ? null : handleClick(id))}\n\t\t\t>\n\t\t\t\t<div className=\"flipper\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tstyle={{ height, width }}\n\t\t\t\t\t\talt=\"pokemon card\"\n\t\t\t\t\t\tclassName={flipped ? \"front\" : \"back\"}\n\t\t\t\t\t\tsrc={flipped || solved ? `/img/${type}.jpeg` : `/img/cardback.jpeg`}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default Card;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Card from \"../Card\";\n\nimport \"./styles.css\";\n\nGameboard.propTypes = {\n\tcards: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n\tflipped: PropTypes.arrayOf(PropTypes.number).isRequired,\n\tsolved: PropTypes.arrayOf(PropTypes.number).isRequired,\n\thandleClick: PropTypes.func.isRequired,\n\tdimension: PropTypes.number.isRequired,\n\tdisabled: PropTypes.bool.isRequired,\n};\n\nfunction Gameboard({\n\tdisabled,\n\tdimension,\n\tcards,\n\tflipped,\n\thandleClick,\n\tsolved,\n}) {\n\treturn (\n\t\t<>\n\t\t\t\t<div className=\"gameboard\">\n\t\t\t\t\t{cards.map((card) => (\n\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\tkey={card.id}\n\t\t\t\t\t\t\tid={card.id}\n\t\t\t\t\t\t\ttype={card.type}\n\t\t\t\t\t\t\twidth={dimension / 4.5}\n\t\t\t\t\t\t\theight={dimension / 4.5}\n\t\t\t\t\t\t\tflipped={flipped.includes(card.id)}\n\t\t\t\t\t\t\thandleClick={handleClick}\n\t\t\t\t\t\t\tdisabled={disabled || solved.includes(card.id)}\n\t\t\t\t\t\t\tsolved={solved.includes(card.id)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default Gameboard;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Gameboard from \"../Gameboard\";\nimport initializeDeck from \"../Deck/index.js\";\nimport \"./styles.css\";\n\nconst firstDeck = initializeDeck();\n\nfunction App() {\n\tconst { cards, flipped, solved, disabled } = useSelector((state) => state);\n\tconst dispatchGameState = useDispatch();\n\tconst [dimension, setDimension] = useState(400);\n\n\t//board settings\n\n\tuseEffect(() => {\n\t\tresizeBoard();\n\t\tdispatchGameState({\n\t\t\ttype: \"generateCards\",\n\t\t\tpayload: firstDeck,\n\t\t});\n\t}, [dispatchGameState]);\n\n\tuseEffect(() => {\n\t\tconst resizeListener = window.addEventListener(\"resize\", resizeBoard);\n\t\treturn () => window.removeEventListener(\"resize\", resizeListener);\n\t}, []);\n\n\tconst resizeBoard = () => {\n\t\tsetDimension(\n\t\t\tMath.min(\n\t\t\t\tdocument.documentElement.clientWidth,\n\t\t\t\tdocument.documentElement.clientHeight\n\t\t\t)\n\t\t);\n\t};\n\n\t// useEffect(() => {\n\t//   preloadImages();\n\t// }, cards);\n\n\t// const preloadImages = () => {\n\t//   cards.map(card => {\n\t//     const src = `/img/${card.type}.jpeg`;\n\t//     new Image().src = src;\n\t//   });\n\t// };\n\n\t//game logic\n\n\tconst resetGame = () => {\n\t\tlocalStorage.clear();\n\t\tdispatchGameState({\n\t\t\ttype: \"resetGame\",\n\t\t});\n\t\tdispatchGameState({\n\t\t\ttype: \"generateCards\",\n\t\t\tpayload: firstDeck,\n\t\t});\n\t};\n\n\tconst sameCardClicked = (id) => flipped.includes(id);\n\n\tconst isMatch = (id) => {\n\t\tconst clickedCard = cards.find((card) => card.id === id);\n\t\tconst flippedCard = cards.find((card) => flipped[0] === card.id);\n\t\treturn flippedCard.type === clickedCard.type;\n\t};\n\n\tconst handleClick = (id) => {\n\t\tdispatchGameState({ type: \"disableBoard\" });\n\t\tif (flipped.length === 0) {\n\t\t\tdispatchGameState({ type: \"flippedCards\", payload: [id] });\n\t\t\tdispatchGameState({ type: \"enableBoard\" });\n\t\t} else {\n\t\t\tif (sameCardClicked(id)) return;\n\t\t\tdispatchGameState({\n\t\t\t\ttype: \"flippedCards\",\n\t\t\t\tpayload: [flipped[0], id],\n\t\t\t});\n\t\t\tif (isMatch(id)) {\n\t\t\t\tdispatchGameState({\n\t\t\t\t\ttype: \"flippedCards\",\n\t\t\t\t\tpayload: [id],\n\t\t\t\t});\n\t\t\t\tdispatchGameState({\n\t\t\t\t\ttype: \"solvedCards\",\n\t\t\t\t\tpayload: [...solved, flipped[0], id],\n\t\t\t\t});\n\t\t\t\tdispatchGameState({ type: \"resetFlippedCards\" });\n\t\t\t} else {\n\t\t\t\tsetTimeout(\n\t\t\t\t\t() => dispatchGameState({ type: \"resetFlippedCards\" }),\n\t\t\t\t\t2000\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n\n\t//local storage\n\n\tuseEffect(() => {\n\t\tconst LScards = {\n\t\t\tcards: JSON.parse(localStorage.getItem(\"cards\")),\n\t\t\tsolved: JSON.parse(localStorage.getItem(\"solved\")) || [],\n\t\t};\n\t\tif (LScards)\n\t\t\tdispatchGameState({\n\t\t\t\ttype: \"storeCards\",\n\t\t\t\tpayload: LScards,\n\t\t\t});\n\t}, [dispatchGameState]);\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\"cards\", JSON.stringify(cards));\n\t\tlocalStorage.setItem(\"solved\", JSON.stringify(solved));\n\t}, [cards, solved]);\n\n\treturn (\n\t\t<>\n\t\t\t<h3>let's play a pokemon memory game!</h3>\n\t\t\t<h4>can you match 'em all?</h4>\n\t\t\t<Gameboard\n\t\t\t\tdimension={dimension}\n\t\t\t\tcards={cards}\n\t\t\t\tflipped={flipped}\n\t\t\t\thandleClick={handleClick}\n\t\t\t\tdisabled={disabled}\n\t\t\t\tsolved={solved}\n\t\t\t/>\n\t\t\t<div className=\"button-container\">\n\t\t\t\t<button className=\"reset-button nes-btn\" onClick={resetGame}>\n\t\t\t\t\trestart game\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default App;\n","function shuffle(array) {\n\tconst newArray = array.slice(0);\n\tfor (let i = 0; i < array.length - 1; i++) {\n\t\tlet randomIndex = Math.floor(Math.random() * (i + 1));\n\t\tlet temp = newArray[i];\n\t\tnewArray[i] = newArray[randomIndex];\n\t\tnewArray[randomIndex] = temp;\n\t}\n\n\treturn newArray;\n}\n\nexport default function initializeDeck() {\n\tlet id = 0;\n\tconst cards = [\n\t\t\"pikachu\",\n\t\t\"gastly\",\n\t\t\"eevee\",\n\t\t\"charizard\",\n\t\t\"gengar\",\n\t\t\"golbat\",\n\t\t\"riolu\",\n\t\t\"typhlosion\",\n\t\t\"muk\",\n\t\t\"mew\",\n\t].reduce((acc, type) => {\n\t\tacc.push({\n\t\t\tid: id++,\n\t\t\ttype,\n\t\t});\n\t\tacc.push({\n\t\t\tid: id++,\n\t\t\ttype,\n\t\t});\n\t\treturn acc;\n\t}, []);\n\n\treturn shuffle(cards);\n}\n","const initialState = {\n  cards: [],\n  flipped: [],\n  solved: [],\n  disabled: false\n};\n\nexport default (prevState = initialState, { type, payload }) => {\n  switch (type) {\n    case \"generateCards\":\n      const storedCards = JSON.parse(localStorage.getItem(\"cards\")) || [];\n      if (storedCards.length) {\n        return { ...prevState, cards: storedCards };\n      }\n      localStorage.setItem(\"cards\", JSON.stringify(payload));\n      return { ...prevState, cards: payload };\n    case \"storeCards\":\n      return {\n        ...prevState,\n        cards: payload.cards,\n        solved: payload.solved\n      };\n    case \"disableBoard\":\n      return { ...prevState, disabled: true };\n    case \"enableBoard\":\n      return { ...prevState, disabled: false };\n    case \"flippedCards\":\n      return { ...prevState, flipped: payload };\n    case \"solvedCards\":\n      return { ...prevState, solved: payload };\n    case \"resetFlippedCards\":\n      return { ...prevState, flipped: initialState.flipped, disabled: false };\n    case \"resetGame\":\n      return initialState;\n    default:\n      return prevState;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./components/App/index.js\";\nimport reduxReducer from \"./reduxReducer\";\n\nconst store = createStore(reduxReducer);\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}